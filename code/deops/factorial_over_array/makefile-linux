#
# Setup the C compiler and any flags
#
CC = gcc
CFLAGS = -m32
CLINKFLAGS = -m32

#
# Setup the NASM Compliler and any flags
#
ASM = nasm
ASMFLAGS = -f elf -O0

#
# Our default goal is to go all the way from start to finish
#
.DEFAULT_GOAL = clean

#
# Compile the C files
#
%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $< 

#
# Compile any NASM files.
#
factorial_op.o: factorial_op.asm
	$(ASM) $(ASMFLAGS) $<
factorial_deop_1.o: factorial_deop_1.asm
	$(ASM) $(ASMFLAGS) $<

#
# Link into the optimized version
#
factorial_over_array_op: factorial_over_array_main.o factorial_op.o
	gcc $(CLINKFLAGS) factorial_op.o factorial_over_array_main.o -o factorial_op

#
# Link into one of the deoptimized versions
#
factorial_over_array_deop_1: factorial_over_array_main.o factorial_deop_1.o
	gcc $(CLINKFLAGS) factorial_deop_1.o factorial_over_array_main.o -o factorial_deop_1

#
# Define everything that needs to be done
#
all: factorial_over_array_op factorial_over_array_deop_1

#
# Clean up static object files
#
clean:  all
	rm *.o